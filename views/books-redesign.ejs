<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="UTF-8">
    <title>Books - Library Management</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="/output.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
</head>
<body class="min-h-screen bg-base-100">
    <!-- Navigation -->
    <div class="navbar bg-primary text-primary-content shadow-lg sticky top-0 z-40">
        <div class="navbar-start">
            <div class="dropdown">
                <div tabindex="0" role="button" class="btn btn-ghost lg:hidden">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16"></path>
                    </svg>
                </div>
                <ul tabindex="0" class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-primary rounded-box w-52">
                    <li><a href="/books" class="text-primary-content font-bold"><i class="fas fa-book mr-2"></i>Books</a></li>
                    <li><a href="/members" class="text-primary-content"><i class="fas fa-users mr-2"></i>Members</a></li>
                    <li><a href="/borrowing" class="text-primary-content"><i class="fas fa-exchange-alt mr-2"></i>Borrowing</a></li>
                    <li><a href="/" class="text-primary-content"><i class="fas fa-home mr-2"></i>Home</a></li>
                </ul>
            </div>
            <a href="/" class="btn btn-ghost text-xl">
                <i class="fas fa-book-open mr-2"></i>
                Library Management
            </a>
        </div>
        <div class="navbar-center hidden lg:flex">
            <ul class="menu menu-horizontal px-1">
                <li><a href="/books" class="text-primary-content font-bold"><i class="fas fa-book mr-2"></i>Books</a></li>
                <li><a href="/members" class="text-primary-content"><i class="fas fa-users mr-2"></i>Members</a></li>
                <li><a href="/borrowing" class="text-primary-content"><i class="fas fa-exchange-alt mr-2"></i>Borrowing</a></li>
                <li><a href="/" class="text-primary-content"><i class="fas fa-home mr-2"></i>Home</a></li>
            </ul>
        </div>
        <div class="navbar-end">
            <div class="form-control">
                <input type="text" id="searchBooks" placeholder="Search books..." class="input input-bordered input-sm w-full max-w-xs" />
            </div>
        </div>
    </div>

    <div class="container mx-auto px-4 py-6">
        <!-- Header Section -->
        <div class="flex flex-col lg:flex-row lg:justify-between lg:items-center mb-8">
            <div>
                <h1 class="text-4xl font-bold text-base-content mb-2">
                    <i class="fas fa-book-open text-primary mr-3"></i>
                    Library Books
                </h1>
                <p class="text-base-content/70">Manage your library's book collection</p>
            </div>
            <div class="flex flex-col sm:flex-row gap-3 mt-4 lg:mt-0">
                <button id="openAddBookModal" class="btn btn-primary btn-lg">
                    <i class="fas fa-plus mr-2"></i>
                    Add New Book
                </button>
                <div class="dropdown dropdown-end">
                    <div tabindex="0" role="button" class="btn btn-outline btn-lg">
                        <i class="fas fa-filter mr-2"></i>
                        Filter
                    </div>
                    <div tabindex="0" class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-52">
                        <li><a id="filterAll" class="active"><i class="fas fa-list mr-2"></i>All Books</a></li>
                        <li><a id="filterRecent"><i class="fas fa-clock mr-2"></i>Recent (2020+)</a></li>
                        <li><a id="filterClassic"><i class="fas fa-scroll mr-2"></i>Classic (Pre-2000)</a></li>
                    </div>
                </div>
            </div>
        </div>

        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
            <div class="stat bg-primary text-primary-content rounded-box shadow-lg">
                <div class="stat-figure">
                    <i class="fas fa-book text-3xl opacity-80"></i>
                </div>
                <div class="stat-title text-primary-content/80">Total Books</div>
                <div class="stat-value" id="totalBooksCount">0</div>
                <div class="stat-desc text-primary-content/60">In collection</div>
            </div>
            <div class="stat bg-secondary text-secondary-content rounded-box shadow-lg">
                <div class="stat-figure">
                    <i class="fas fa-user-edit text-3xl opacity-80"></i>
                </div>
                <div class="stat-title text-secondary-content/80">Authors</div>
                <div class="stat-value" id="uniqueAuthorsCount">0</div>
                <div class="stat-desc text-secondary-content/60">Unique authors</div>
            </div>
            <div class="stat bg-accent text-accent-content rounded-box shadow-lg">
                <div class="stat-figure">
                    <i class="fas fa-calendar text-3xl opacity-80"></i>
                </div>
                <div class="stat-title text-accent-content/80">Latest</div>
                <div class="stat-value text-2xl" id="latestYear">2024</div>
                <div class="stat-desc text-accent-content/60">Most recent</div>
            </div>
        </div>

        <!-- View Toggle -->
        <div class="flex justify-between items-center mb-6">
            <div class="tabs tabs-boxed bg-base-200">
                <button id="cardView" class="tab tab-active">
                    <i class="fas fa-th mr-2"></i>Cards
                </button>
                <button id="tableView" class="tab">
                    <i class="fas fa-table mr-2"></i>Table
                </button>
            </div>
            <div class="text-sm text-base-content/60">
                Showing <span id="visibleCount">0</span> of <span id="totalCount">0</span> books
            </div>
        </div>

        <!-- Books Content -->
        <div id="booksContainer">
            <!-- Card View -->
            <div id="cardViewContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <!-- Books will be loaded here dynamically -->
            </div>

            <!-- Table View -->
            <div id="tableViewContainer" class="overflow-x-auto bg-base-100 rounded-lg shadow-lg" style="display: none;">
                <table class="table table-zebra w-full">
                    <thead class="bg-base-200">
                        <tr>
                            <th class="text-base-content font-bold">
                                <i class="fas fa-book mr-2"></i>Title
                            </th>
                            <th class="text-base-content font-bold">
                                <i class="fas fa-user mr-2"></i>Author
                            </th>
                            <th class="text-base-content font-bold">
                                <i class="fas fa-calendar mr-2"></i>Year
                            </th>
                            <th class="text-base-content font-bold">
                                <i class="fas fa-info-circle mr-2"></i>Description
                            </th>
                            <th class="text-base-content font-bold">
                                <i class="fas fa-cogs mr-2"></i>Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        <!-- Books will be loaded here dynamically -->
                    </tbody>
                </table>
            </div>

            <!-- Empty State -->
            <div id="emptyState" class="text-center py-16" style="display: none;">
                <div class="text-6xl text-base-content/20 mb-4">
                    <i class="fas fa-book-open"></i>
                </div>
                <h3 class="text-2xl font-bold text-base-content mb-2">No books found</h3>
                <p class="text-base-content/60 mb-6">Start building your library by adding your first book</p>
                <button class="btn btn-primary btn-lg" onclick="document.getElementById('openAddBookModal').click()">
                    <i class="fas fa-plus mr-2"></i>
                    Add Your First Book
                </button>
            </div>
        </div>
    </div>

    <!-- Add Book Modal -->
    <div id="addBookModal" class="modal">
        <div class="modal-box w-11/12 max-w-2xl">
            <button id="closeAddBookModal" class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">âœ•</button>
            <h2 class="font-bold text-2xl mb-6">
                <i class="fas fa-plus-circle text-primary mr-2"></i>
                Add New Book
            </h2>
            
            <% if (typeof errors !== 'undefined' && errors.length && typeof editMode === 'undefined') { %>
                <div class="alert alert-error mb-6">
                    <i class="fas fa-exclamation-triangle"></i>
                    <div>
                        <h3 class="font-bold">Please fix the following errors:</h3>
                        <ul class="list-disc list-inside">
                            <% errors.forEach(function(error) { %>
                                <li><%= error %></li>
                            <% }); %>
                        </ul>
                    </div>
                </div>
            <% } %>

            <form action="/api/books/add" method="POST" class="space-y-4">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div class="form-control">
                        <label class="label" for="title">
                            <span class="label-text font-semibold">
                                <i class="fas fa-book mr-2 text-primary"></i>Title
                            </span>
                        </label>
                        <input type="text" id="title" name="Title" class="input input-bordered focus:input-primary" required>
                    </div>
                    <div class="form-control">
                        <label class="label" for="author">
                            <span class="label-text font-semibold">
                                <i class="fas fa-user mr-2 text-primary"></i>Author
                            </span>
                        </label>
                        <input type="text" id="author" name="Author" class="input input-bordered focus:input-primary" required>
                    </div>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div class="form-control">
                        <label class="label" for="ISBN">
                            <span class="label-text font-semibold">
                                <i class="fas fa-barcode mr-2 text-primary"></i>ISBN
                            </span>
                        </label>
                        <div class="join w-full">
                            <input type="text" id="ISBN" name="ISBN" class="input input-bordered join-item flex-1 focus:input-primary" required>
                            <button type="button" id="generateISBN" class="btn btn-secondary join-item">
                                <i class="fas fa-random mr-2"></i>Generate
                            </button>
                        </div>
                    </div>
                    <div class="form-control">
                        <label class="label" for="publicationYear">
                            <span class="label-text font-semibold">
                                <i class="fas fa-calendar mr-2 text-primary"></i>Publication Year
                            </span>
                        </label>
                        <input type="number" id="publicationYear" name="PublicationYear" class="input input-bordered focus:input-primary" min="1000" max="2030" required>
                    </div>
                </div>

                <div class="form-control">
                    <label class="label" for="description">
                        <span class="label-text font-semibold">
                            <i class="fas fa-align-left mr-2 text-primary"></i>Description
                        </span>
                    </label>
                    <textarea id="description" name="Description" class="textarea textarea-bordered focus:textarea-primary h-24" placeholder="Enter book description..."></textarea>
                </div>

                <div class="modal-action">
                    <button type="button" id="closeAddBookModalBtn" class="btn btn-ghost">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save mr-2"></i>Add Book
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Edit Book Modal -->
    <div id="editBookModal" class="modal">
        <div class="modal-box w-11/12 max-w-2xl">
            <button id="closeEditBookModal" class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">âœ•</button>
            <h2 class="font-bold text-2xl mb-6">
                <i class="fas fa-edit text-primary mr-2"></i>
                Edit Book
            </h2>
            
            <% if (typeof errors !== 'undefined' && errors.length && typeof editMode !== 'undefined') { %>
                <div class="alert alert-error mb-6">
                    <i class="fas fa-exclamation-triangle"></i>
                    <div>
                        <h3 class="font-bold">Please fix the following errors:</h3>
                        <ul class="list-disc list-inside">
                            <% errors.forEach(function(error) { %>
                                <li><%= error %></li>
                            <% }); %>
                        </ul>
                    </div>
                </div>
            <% } %>

            <form id="editBookForm" action="/api/books/edit" method="POST" class="space-y-4">
                <input type="hidden" id="editISBN" name="ISBN">
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div class="form-control">
                        <label class="label" for="editTitle">
                            <span class="label-text font-semibold">
                                <i class="fas fa-book mr-2 text-primary"></i>Title
                            </span>
                        </label>
                        <input type="text" id="editTitle" name="Title" class="input input-bordered focus:input-primary" required>
                    </div>
                    <div class="form-control">
                        <label class="label" for="editAuthor">
                            <span class="label-text font-semibold">
                                <i class="fas fa-user mr-2 text-primary"></i>Author
                            </span>
                        </label>
                        <input type="text" id="editAuthor" name="Author" class="input input-bordered focus:input-primary" required>
                    </div>
                </div>

                <div class="form-control">
                    <label class="label" for="editPublicationYear">
                        <span class="label-text font-semibold">
                            <i class="fas fa-calendar mr-2 text-primary"></i>Publication Year
                        </span>
                    </label>
                    <input type="number" id="editPublicationYear" name="PublicationYear" class="input input-bordered focus:input-primary" min="1000" max="2030" required>
                </div>

                <div class="form-control">
                    <label class="label" for="editDescription">
                        <span class="label-text font-semibold">
                            <i class="fas fa-align-left mr-2 text-primary"></i>Description
                        </span>
                    </label>
                    <textarea id="editDescription" name="Description" class="textarea textarea-bordered focus:textarea-primary h-24" placeholder="Enter book description..."></textarea>
                </div>

                <div class="modal-action">
                    <button type="button" id="closeEditBookModalBtn" class="btn btn-ghost">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save mr-2"></i>Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Global variables
        let allBooks = [];
        let filteredBooks = [];
        let currentView = 'card';

        // DOM Elements
        const searchInput = document.getElementById('searchBooks');
        const cardViewContainer = document.getElementById('cardViewContainer');
        const tableViewContainer = document.getElementById('tableViewContainer');
        const tableBody = document.getElementById('tableBody');
        const emptyState = document.getElementById('emptyState');
        const cardViewBtn = document.getElementById('cardView');
        const tableViewBtn = document.getElementById('tableView');

        // Modal elements
        const addBookModal = document.getElementById('addBookModal');
        const editBookModal = document.getElementById('editBookModal');
        const openAddBookModalBtn = document.getElementById('openAddBookModal');
        const closeAddBookModalBtns = document.querySelectorAll('#closeAddBookModal, #closeAddBookModalBtn');
        const closeEditBookModalBtns = document.querySelectorAll('#closeEditBookModal, #closeEditBookModalBtn');
        const generateISBNBtn = document.getElementById('generateISBN');
        const editBookForm = document.getElementById('editBookForm');

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadBooks();
            setupEventListeners();
        });

        function setupEventListeners() {
            // Search functionality
            searchInput.addEventListener('input', debounce(filterBooks, 300));

            // View toggle
            cardViewBtn.addEventListener('click', () => switchView('card'));
            tableViewBtn.addEventListener('click', () => switchView('table'));

            // Filter buttons
            document.getElementById('filterAll').addEventListener('click', () => applyFilter('all'));
            document.getElementById('filterRecent').addEventListener('click', () => applyFilter('recent'));
            document.getElementById('filterClassic').addEventListener('click', () => applyFilter('classic'));

            // Modal controls
            openAddBookModalBtn.addEventListener('click', () => addBookModal.showModal());
            closeAddBookModalBtns.forEach(btn => btn.addEventListener('click', () => addBookModal.close()));
            closeEditBookModalBtns.forEach(btn => btn.addEventListener('click', () => editBookModal.close()));

            // Generate ISBN
            generateISBNBtn.addEventListener('click', generateRandomISBN);
        }

        async function loadBooks() {
            try {
                const response = await fetch('/api/books');
                if (response.ok) {
                    const data = await response.json();
                    allBooks = Array.isArray(data) ? data : (data.data || []);
                    filteredBooks = [...allBooks];
                    updateDisplay();
                    updateStats();
                } else {
                    console.error('Failed to load books');
                    showEmptyState();
                }
            } catch (error) {
                console.error('Error loading books:', error);
                showEmptyState();
            }
        }

        function updateDisplay() {
            const visibleBooks = filteredBooks;
            
            if (visibleBooks.length === 0) {
                showEmptyState();
                return;
            }

            hideEmptyState();
            
            if (currentView === 'card') {
                displayCardView(visibleBooks);
            } else {
                displayTableView(visibleBooks);
            }

            updateCounts();
        }

        function displayCardView(books) {
            cardViewContainer.innerHTML = books.map(book => createBookCard(book)).join('');
        }

        function displayTableView(books) {
            tableBody.innerHTML = books.map(book => createBookTableRow(book)).join('');
        }

        function createBookCard(book) {
            const description = book.Description ? 
                (book.Description.length > 100 ? book.Description.substring(0, 100) + '...' : book.Description) : 
                'No description available';
            
            return `
                <div class="card bg-base-100 shadow-lg hover:shadow-xl transition-all duration-300 border border-base-300">
                    <div class="card-body">
                        <div class="flex justify-between items-start mb-3">
                            <div class="badge badge-primary badge-outline">${book.PublicationYear || 'Unknown'}</div>
                            <div class="dropdown dropdown-end">
                                <div tabindex="0" role="button" class="btn btn-ghost btn-sm btn-circle">
                                    <i class="fas fa-ellipsis-v"></i>
                                </div>
                                <ul tabindex="0" class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-40">
                                    <li><a onclick="editBook('${book.ISBN}')" class="text-info"><i class="fas fa-edit mr-2"></i>Edit</a></li>
                                    <li><a onclick="deleteBook('${book.BookID}')" class="text-error"><i class="fas fa-trash mr-2"></i>Delete</a></li>
                                </ul>
                            </div>
                        </div>
                        <h3 class="card-title text-lg font-bold text-primary mb-2">${book.Title}</h3>
                        <p class="text-base-content/80 font-medium mb-2">
                            <i class="fas fa-user mr-2 text-secondary"></i>${book.Author}
                        </p>
                        <p class="text-base-content/60 text-sm mb-4">${description}</p>
                        <div class="card-actions justify-between items-center">
                            <div class="text-xs text-base-content/50">
                                ISBN: ${book.ISBN}
                            </div>
                            <div class="btn-group">
                                <button onclick="editBook('${book.ISBN}')" class="btn btn-info btn-sm">
                                    <i class="fas fa-edit mr-1"></i>Edit
                                </button>
                                <button onclick="deleteBook('${book.BookID}')" class="btn btn-error btn-sm">
                                    <i class="fas fa-trash mr-1"></i>Delete
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        }

        function createBookTableRow(book) {
            const description = book.Description ? 
                (book.Description.length > 50 ? book.Description.substring(0, 50) + '...' : book.Description) : 
                'No description';
            
            return `
                <tr class="hover">
                    <td class="font-semibold">${book.Title}</td>
                    <td>${book.Author}</td>
                    <td>
                        <div class="badge badge-primary badge-outline">${book.PublicationYear || 'Unknown'}</div>
                    </td>
                    <td class="max-w-xs truncate">${description}</td>
                    <td>
                        <div class="btn-group">
                            <button onclick="editBook('${book.ISBN}')" class="btn btn-info btn-xs">
                                <i class="fas fa-edit mr-1"></i>Edit
                            </button>
                            <button onclick="deleteBook('${book.BookID}')" class="btn btn-error btn-xs">
                                <i class="fas fa-trash mr-1"></i>Delete
                            </button>
                        </div>
                    </td>
                </tr>
            `;
        }

        function switchView(view) {
            currentView = view;
            
            if (view === 'card') {
                cardViewBtn.classList.add('tab-active');
                tableViewBtn.classList.remove('tab-active');
                cardViewContainer.style.display = 'grid';
                tableViewContainer.style.display = 'none';
            } else {
                tableViewBtn.classList.add('tab-active');
                cardViewBtn.classList.remove('tab-active');
                cardViewContainer.style.display = 'none';
                tableViewContainer.style.display = 'block';
            }
            
            updateDisplay();
        }

        function filterBooks() {
            const searchTerm = searchInput.value.toLowerCase().trim();
            
            filteredBooks = allBooks.filter(book => 
                book.Title.toLowerCase().includes(searchTerm) ||
                book.Author.toLowerCase().includes(searchTerm) ||
                (book.Description && book.Description.toLowerCase().includes(searchTerm)) ||
                book.ISBN.includes(searchTerm)
            );
            
            updateDisplay();
        }

        function applyFilter(filterType) {
            const currentYear = new Date().getFullYear();
            
            switch(filterType) {
                case 'recent':
                    filteredBooks = allBooks.filter(book => book.PublicationYear >= 2020);
                    break;
                case 'classic':
                    filteredBooks = allBooks.filter(book => book.PublicationYear < 2000);
                    break;
                default:
                    filteredBooks = [...allBooks];
            }
            
            // Apply current search filter
            if (searchInput.value.trim()) {
                filterBooks();
            } else {
                updateDisplay();
            }

            // Update active filter
            document.querySelectorAll('.dropdown-content a').forEach(link => link.classList.remove('active'));
            document.getElementById(`filter${filterType.charAt(0).toUpperCase() + filterType.slice(1)}`).classList.add('active');
        }

        function updateStats() {
            const totalBooks = allBooks.length;
            const uniqueAuthors = new Set(allBooks.map(book => book.Author)).size;
            const latestYear = Math.max(...allBooks.map(book => book.PublicationYear || 0));
            
            document.getElementById('totalBooksCount').textContent = totalBooks;
            document.getElementById('uniqueAuthorsCount').textContent = uniqueAuthors;
            document.getElementById('latestYear').textContent = latestYear || 'Unknown';
        }

        function updateCounts() {
            document.getElementById('visibleCount').textContent = filteredBooks.length;
            document.getElementById('totalCount').textContent = allBooks.length;
        }

        function showEmptyState() {
            cardViewContainer.style.display = 'none';
            tableViewContainer.style.display = 'none';
            emptyState.style.display = 'block';
        }

        function hideEmptyState() {
            emptyState.style.display = 'none';
            if (currentView === 'card') {
                cardViewContainer.style.display = 'grid';
            } else {
                tableViewContainer.style.display = 'block';
            }
        }

        function generateRandomISBN() {
            let isbn = '';
            for (let i = 0; i < 13; i++) {
                isbn += Math.floor(Math.random() * 10);
            }
            document.getElementById('ISBN').value = isbn;
        }

        function editBook(isbn) {
            const book = allBooks.find(b => b.ISBN === isbn);
            if (book) {
                document.getElementById('editTitle').value = book.Title;
                document.getElementById('editAuthor').value = book.Author;
                document.getElementById('editPublicationYear').value = book.PublicationYear;
                document.getElementById('editDescription').value = book.Description || '';
                document.getElementById('editISBN').value = book.ISBN;
                editBookModal.showModal();
            }
        }

        function deleteBook(bookId) {
            const book = allBooks.find(b => b.BookID == bookId);
            if (book && confirm(`Are you sure you want to delete "${book.Title}" by ${book.Author}?`)) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `/books/delete/${bookId}`;
                document.body.appendChild(form);
                form.submit();
            }
        }

        // Utility function for debouncing
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Load books data for display
        <% if (typeof books !== 'undefined' && books && books.length > 0) { %>
            allBooks = <%- JSON.stringify(books) %>;
            filteredBooks = [...allBooks];
            
            // Initialize display after DOM is loaded
            document.addEventListener('DOMContentLoaded', function() {
                updateDisplay();
                updateStats();
            });
        <% } %>
    </script>
</body>
</html>